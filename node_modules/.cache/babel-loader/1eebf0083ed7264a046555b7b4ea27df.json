{"ast":null,"code":"var _jsxFileName = \"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherNextWeek.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport WeatherCard from './weatherCard';\nimport WeatherCardPlug from './weatherCardPlug';\nimport WeatherCardWeek from './weatherCardWeek';\nimport Api from '../utils/api';\nimport { BASEURL_WEEK, APIKEY, selectWeatherWeek } from '../utils/constans';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WeatherNextWeek() {\n  _s();\n\n  //slider state and utils\n  const slider = React.useRef(null);\n  const [prev, setPrev] = React.useState(false);\n  const [next, setNext] = React.useState(false);\n  let position = 0; //state for request to weather API\n\n  const [dataForReq, setDataForReq] = React.useState({\n    lat: '',\n    lon: '',\n    dt: ''\n  }); //state with array of weather on the week\n\n  const [weatherWeek, setWeatherWeek] = React.useState([]);\n  React.useEffect(() => {\n    const {\n      lat,\n      lon,\n      dt\n    } = dataForReq;\n\n    if (lat && lon && dt) {\n      // reqToApi(lat, lon, dt);\n      const api = new Api(BASEURL_WEEK, lat, lon, dt, APIKEY);\n      api.weatherOnWeek().then(data => setWeatherWeek(data.daily)).catch(err => console.log(err));\n    }\n  }, [dataForReq]);\n  React.useEffect(() => {\n    setEventListeners();\n  }, [weatherWeek]);\n\n  function handleChange(e) {\n    const {\n      lat,\n      lon,\n      dt\n    } = dataForReq;\n\n    if (e.target === document.querySelector(selectWeatherWeek)) {\n      const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n      const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n      const currentDate = new Date();\n      const currentDateUnix = currentDate.setDate(currentDate.getDate());\n      setDataForReq({ ...dataForReq,\n        lat: latVal,\n        lon: lonVal,\n        dt: currentDateUnix\n      });\n    }\n  }\n\n  function handlerPrev() {\n    if (position === 0) {\n      setPrev(true);\n    } else {\n      position += 184;\n      setPrev(false);\n      slider.current.childNodes.forEach(elem => {\n        elem.style = `transform: translateX(${position}px)`;\n      });\n    }\n  }\n\n  function handlerNext() {\n    if (position === -1288) {\n      setNext(true);\n      setPrev(false);\n    } else {\n      setPrev(false);\n      position -= 184;\n      slider.current.childNodes.forEach(elem => {\n        elem.style = `transform: translateX(${position}px)`;\n      });\n    }\n  }\n\n  function setEventListeners() {\n    document.addEventListener('keydown', handleArrowBtn);\n  }\n\n  function handleArrowBtn(e) {\n    if (e.key === 'ArrowLeft') {\n      handlerPrev();\n    } else if (e.key === 'ArrowRight') {\n      handlerNext();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather__widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"weather__header\",\n        children: \"7 Days Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather__inputs\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"city__week\",\n          className: \"weather__select\",\n          type: \"text\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            disabled: true,\n            children: \"Select city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            lat: '53.195873',\n            lon: '50.100193',\n            children: \"\\u0421\\u0430\\u043C\\u0430\\u0440\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            lat: '53.507836',\n            lon: '49.420393',\n            children: \"\\u0422\\u043E\\u043B\\u044C\\u044F\\u0442\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            lat: '51.533557',\n            lon: '46.034257',\n            children: \"\\u0421\\u0430\\u0440\\u0430\\u0442\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            lat: '55.796127',\n            lon: '49.106405',\n            children: \"\\u041A\\u0430\\u0437\\u0430\\u043D\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            lat: '45.035470',\n            lon: '38.975313',\n            children: \"\\u041A\\u0440\\u0430\\u0441\\u043D\\u043E\\u0434\\u0430\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), !weatherWeek.length && /*#__PURE__*/_jsxDEV(WeatherCardPlug, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 42\n      }, this), weatherWeek.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider__track\",\n          ref: slider,\n          children: weatherWeek.map(card => /*#__PURE__*/_jsxDEV(WeatherCardWeek, {\n            info: card,\n            style: \"slider\"\n          }, card.dt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 22\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"slider__button slider__button_prev\",\n          onClick: handlerPrev\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"slider__button slider__button_next\",\n          onClick: handlerNext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(WeatherNextWeek, \"xuad3llYuL77gpUUu2dhLv0QaJs=\");\n\n_c = WeatherNextWeek;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherNextWeek\");","map":{"version":3,"sources":["/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherNextWeek.jsx"],"names":["React","WeatherCard","WeatherCardPlug","WeatherCardWeek","Api","BASEURL_WEEK","APIKEY","selectWeatherWeek","WeatherNextWeek","slider","useRef","prev","setPrev","useState","next","setNext","position","dataForReq","setDataForReq","lat","lon","dt","weatherWeek","setWeatherWeek","useEffect","api","weatherOnWeek","then","data","daily","catch","err","console","log","setEventListeners","handleChange","e","target","document","querySelector","latVal","selectedIndex","attributes","value","lonVal","currentDate","Date","currentDateUnix","setDate","getDate","handlerPrev","current","childNodes","forEach","elem","style","handlerNext","addEventListener","handleArrowBtn","key","length","map","card"],"mappings":"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","sourcesContent":["import React from 'react';\nimport WeatherCard from './weatherCard';\nimport WeatherCardPlug from './weatherCardPlug';\nimport WeatherCardWeek from './weatherCardWeek';\nimport Api from '../utils/api';\nimport {BASEURL_WEEK, APIKEY, selectWeatherWeek} from '../utils/constans';\n\nexport default function WeatherNextWeek(){\n\n    //slider state and utils\n    const slider = React.useRef(null);\n    const [prev, setPrev] = React.useState(false);\n    const [next, setNext] = React.useState(false);\n    let position = 0;\n\n    //state for request to weather API\n    const [dataForReq, setDataForReq] = React.useState({\n        lat: '',\n        lon: '',\n        dt: ''\n    });\n\n    //state with array of weather on the week\n    const [weatherWeek, setWeatherWeek] = React.useState([])\n\n\n\n    React.useEffect(() => {\n        const {lat, lon, dt } = dataForReq;\n        if(lat && lon && dt ){\n            // reqToApi(lat, lon, dt);\n            const api = new Api(BASEURL_WEEK, lat, lon, dt, APIKEY);\n            api.weatherOnWeek()\n                .then(data => setWeatherWeek(data.daily))\n                .catch(err => console.log(err))\n        }\n    }, [dataForReq])\n\n    React.useEffect(() => {\n        setEventListeners();\n    }, [weatherWeek])\n\n    function handleChange(e){\n        const {lat, lon, dt } = dataForReq;\n\n    if(e.target === document.querySelector(selectWeatherWeek)){\n                const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n                const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n                const currentDate =  new Date();\n                const currentDateUnix =  currentDate.setDate(currentDate.getDate());\n                setDataForReq({...dataForReq, \n                    lat:latVal,\n                    lon:lonVal,\n                    dt:currentDateUnix\n                })\n        }\n    }\n    function handlerPrev () {\n        if(position === 0) {\n            setPrev(true);\n        } else {\n            position += 184;\n            setPrev(false);\n            slider.current.childNodes.forEach((elem)=> {\n                elem.style = `transform: translateX(${position}px)`;\n            })\n        }\n    }\n\n    function handlerNext () {\n        if(position === -1288) {\n            setNext(true);\n            setPrev(false);\n        } else {\n            setPrev(false);\n            position -= 184;\n            slider.current.childNodes.forEach((elem)=> {\n                elem.style = `transform: translateX(${position}px)`;\n            })\n        }\n    }\n\n    function setEventListeners() {\n        document.addEventListener('keydown', handleArrowBtn);\n\n    }\n    function handleArrowBtn(e){\n        if(e.key === 'ArrowLeft') {\n            handlerPrev();\n        } else if(e.key === 'ArrowRight') {\n            handlerNext();\n        }\n    }\n\n\n    return (\n        <>\n        <div className=\"weather__widget\">\n        <h2 className=\"weather__header\">7 Days Forecast</h2>\n        <div className=\"weather__inputs\">\n            {/* <form action=\"\"> */}\n                <select id=\"city__week\" className=\"weather__select\" type=\"text\" onChange={handleChange}>\n                <option selected disabled>Select city</option>\n                    <option lat={'53.195873'} lon={'50.100193'}>Самара</option>\n                    <option lat={'53.507836'} lon={'49.420393'}>Тольятти</option>\n                    <option lat={'51.533557'} lon={'46.034257'}>Саратов</option>\n                    <option lat={'55.796127'} lon={'49.106405'}>Казань</option>\n                    <option lat={'45.035470'} lon={'38.975313'}>Краснодар</option>\n                </select>\n                </div>\n                {!weatherWeek.length && (<WeatherCardPlug />)}\n                {weatherWeek.length > 0 && (\n                <div className=\"slider\">\n                    <div className=\"slider__track\"  ref={slider}>\n                      {weatherWeek.map((card) => (\n                     <WeatherCardWeek key={card.dt} info = {card} style = 'slider' />))}\n                    </div>\n                   <button className=\"slider__button slider__button_prev\"onClick={handlerPrev}></button>\n                   <button className=\"slider__button slider__button_next\"onClick={handlerNext}></button>\n                   </div>)\n                   }\n        </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}