{"ast":null,"code":"var _jsxFileName = \"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherPast.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport WeatherCard from './weatherCard';\nimport WeatherCardPlug from './weatherCardPlug';\nimport Api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WeatherPast() {\n  _s();\n\n  const [dataForReq, setDataForReq] = React.useState({\n    lat: '',\n    lon: '',\n    dt: ''\n  });\n  const [cords, setCords] = React.useState([]);\n  const [minDate, setMinDate] = React.useState('');\n  const [maxDate, setMaxDate] = React.useState('');\n  const [weatherInfo, setWeatherInfo] = React.useState({\n    date: '',\n    weather: '',\n    icon: ''\n  });\n  const BASEURL_PAST = 'https://api.openweathermap.org/data/2.5/onecall/timemachine?';\n  const APIKEY = '7502839bf5a559b85bd11512693a5993';\n  const {\n    date,\n    weather,\n    icon\n  } = weatherInfo; // function reqToApi(lat, lon, dt) {\n  //     console.log('18', lat, lon);\n  //     return fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${dt}&appid=7502839bf5a559b85bd11512693a5993`)\n  //     .then(res => res.json())\n  //     // .then(data => console.log(data))\n  //     .then(data => setWeatherInfo({\n  //         date: dt,\n  //         weather: data.current.temp,\n  //         icon: data.current.weather[0].icon\n  //         }))\n  //     .catch(err => console.log(err))\n  // }\n\n  React.useEffect(() => {}, [weatherInfo]);\n  React.useEffect(() => {\n    handleMinDate();\n    handleMaxDate();\n  }, [minDate, maxDate]);\n  React.useEffect(() => {\n    console.log('state was changed');\n    const {\n      lat,\n      lon,\n      dt\n    } = dataForReq;\n\n    if (lat && lon && dt) {\n      const api = new Api(BASEURL_PAST, lat, lon, dt, APIKEY);\n      api.weatherForPast().then(res => res.json()).then(data => setWeatherInfo({\n        date: dt,\n        weather: data.current.temp,\n        icon: data.current.weather[0].icon\n      })).catch(err => console.log(err));\n    }\n  }, [dataForReq]);\n\n  const handleChange = e => {\n    const {\n      lat,\n      lon,\n      dt\n    } = dataForReq;\n\n    if (e.target === document.querySelector('input[type=date]')) {\n      const dtVal = e.target.value;\n      const dtValUnix = new Date(dtVal).getTime() / 1000;\n      setDataForReq({ ...dataForReq,\n        dt: dtValUnix\n      });\n    } else if (e.target === document.querySelector('#city__past')) {\n      const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n      const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n      setDataForReq({ ...dataForReq,\n        lat: latVal,\n        lon: lonVal\n      });\n    }\n  };\n\n  function handleMinDate() {\n    let date = new Date();\n    const minDateUnix = date.setDate(date.getDate() - 5); //unix time\n\n    let minDateUtc = new Date(minDateUnix);\n    setMinDate(`${minDateUtc.getFullYear()}-0${minDateUtc.getMonth() + 1}-${minDateUtc.getDate()}`);\n  }\n\n  function handleMaxDate() {\n    let date = new Date();\n    setMaxDate(`${date.getFullYear()}-0${date.getMonth() + 1}-${date.getDate()}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather__widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"weather__header\",\n        children: \"Forecast for a Date in the Past\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"weather__past\",\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather__inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"city__past\",\n            className: \"weather__select\",\n            name: \"city__past\",\n            type: \"text\",\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: \"Select city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              lat: '53.195873',\n              lon: '50.100193',\n              children: \"\\u0421\\u0430\\u043C\\u0430\\u0440\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              lat: '53.507836',\n              lon: '49.420393',\n              children: \"\\u0422\\u043E\\u043B\\u044C\\u044F\\u0442\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              lat: '51.533557',\n              lon: '46.034257',\n              children: \"\\u0421\\u0430\\u0440\\u0430\\u0442\\u043E\\u0432\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              lat: '55.796127',\n              lon: '49.106405',\n              children: \"\\u041A\\u0430\\u0437\\u0430\\u043D\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              lat: '45.035470',\n              lon: '38.975313',\n              children: \"\\u041A\\u0440\\u0430\\u0441\\u043D\\u043E\\u0434\\u0430\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"weather__input\",\n            type: \"date\",\n            placeholder: \"Date\",\n            min: minDate,\n            max: maxDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), date && weather && icon ? /*#__PURE__*/_jsxDEV(WeatherCard, {\n        info: weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(WeatherCardPlug, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 86\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(WeatherPast, \"NvsuMREzM4w6xBTCe/g0RmATMdw=\");\n\n_c = WeatherPast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherPast\");","map":{"version":3,"sources":["/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherPast.jsx"],"names":["React","WeatherCard","WeatherCardPlug","Api","WeatherPast","dataForReq","setDataForReq","useState","lat","lon","dt","cords","setCords","minDate","setMinDate","maxDate","setMaxDate","weatherInfo","setWeatherInfo","date","weather","icon","BASEURL_PAST","APIKEY","useEffect","handleMinDate","handleMaxDate","console","log","api","weatherForPast","then","res","json","data","current","temp","catch","err","handleChange","e","target","document","querySelector","dtVal","value","dtValUnix","Date","getTime","latVal","selectedIndex","attributes","lonVal","minDateUnix","setDate","getDate","minDateUtc","getFullYear","getMonth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport WeatherCard from './weatherCard';\nimport WeatherCardPlug from './weatherCardPlug';\nimport Api from '../utils/api';\n\n\nexport default function WeatherPast(){\n\n    const [dataForReq, setDataForReq] = React.useState({\n        lat: '',\n        lon: '',\n        dt: ''\n    });\n\n    const [cords, setCords] = React.useState([]);\n    const [minDate, setMinDate] = React.useState('');\n    const [maxDate, setMaxDate] = React.useState('');\n    const [weatherInfo, setWeatherInfo] = React.useState({\n        date: '',\n        weather: '',\n        icon: ''\n    })\n\n    const BASEURL_PAST = 'https://api.openweathermap.org/data/2.5/onecall/timemachine?';\n    const APIKEY = '7502839bf5a559b85bd11512693a5993';\n\n    const {date, weather, icon} = weatherInfo\n\n    // function reqToApi(lat, lon, dt) {\n    //     console.log('18', lat, lon);\n    //     return fetch(`https://api.openweathermap.org/data/2.5/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${dt}&appid=7502839bf5a559b85bd11512693a5993`)\n    //     .then(res => res.json())\n    //     // .then(data => console.log(data))\n    //     .then(data => setWeatherInfo({\n    //         date: dt,\n    //         weather: data.current.temp,\n    //         icon: data.current.weather[0].icon\n    //         }))\n    //     .catch(err => console.log(err))\n    // }\n\n\n\n    React.useEffect(() => {\n \n    }, [weatherInfo])\n\n    React.useEffect(() => {\n        handleMinDate();\n        handleMaxDate();\n    }, [minDate, maxDate])\n\n\n     React.useEffect(() => {\n         console.log('state was changed')\n        const {lat, lon, dt } = dataForReq;\n        if(lat && lon && dt ){\n            \n            const api =  new Api (BASEURL_PAST, lat, lon, dt, APIKEY);\n            api.weatherForPast()\n            .then(res => res.json())\n            .then(data => setWeatherInfo({\n                        date: dt,\n                        weather: data.current.temp,\n                        icon: data.current.weather[0].icon\n                        }))\n                    .catch(err => console.log(err))\n        }\n    }, [dataForReq])\n\n    const handleChange = (e) => {\n        const {lat, lon, dt } = dataForReq;\n\n        if (e.target === document.querySelector('input[type=date]')) {\n            const dtVal = e.target.value;\n            const dtValUnix = new Date(dtVal).getTime() / 1000;\n            setDataForReq({...dataForReq, \n                            dt:dtValUnix})\n                            \n        } else if(e.target === document.querySelector('#city__past')){\n                const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n                const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n                setDataForReq({...dataForReq, \n                    lat:latVal,\n                    lon:lonVal})\n        }\n    }\n\n    function handleMinDate(){\n        let date = new Date();\n        const minDateUnix =  date.setDate(date.getDate()-5); //unix time\n        let minDateUtc = new Date(minDateUnix);\n        setMinDate(`${minDateUtc.getFullYear()}-0${minDateUtc.getMonth()+1}-${minDateUtc.getDate()}`);\n    }\n\n    function handleMaxDate() {\n        let date = new Date();\n        setMaxDate(`${date.getFullYear()}-0${date.getMonth()+1}-${date.getDate()}`);\n    }\n    return (\n        <>\n        <div className=\"weather__widget\">\n        <h2 className=\"weather__header\">Forecast for a Date in the Past</h2>\n        \n            <form name=\"weather__past\" action=\"\">\n            <div className=\"weather__inputs\">\n                <select id=\"city__past\"  className=\"weather__select\" name=\"city__past\" type=\"text\" onChange={handleChange}>\n                <option selected disabled>Select city</option>\n                    <option lat={'53.195873'} lon={'50.100193'}>Самара</option>\n                    <option lat={'53.507836'} lon={'49.420393'}>Тольятти</option>\n                    <option lat={'51.533557'} lon={'46.034257'}>Саратов</option>\n                    <option lat={'55.796127'} lon={'49.106405'}>Казань</option>\n                    <option lat={'45.035470'} lon={'38.975313'}>Краснодар</option>\n                </select>\n                <input className=\"weather__input\" type=\"date\" placeholder=\"Date\" min={minDate} max={maxDate} onChange={handleChange}/>\n                </div> </form>\n               { (date && weather && icon ? (<WeatherCard info = {weatherInfo}/>) : (<WeatherCardPlug/>))}\n            \n            \n        </div>\n        </>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}