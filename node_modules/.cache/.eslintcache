[{"/Users/sophiastetsura/Desktop/mercury/weather__app/src/index.js":"1","/Users/sophiastetsura/Desktop/mercury/weather__app/src/App.js":"2","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherPast.jsx":"3","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/custom-select-props.js":"4","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/material-ui-pickers.js":"5","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCard.jsx":"6","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/Main.jsx":"7","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCardPlug.jsx":"8","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherNextWeek.jsx":"9","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCardWeek.jsx":"10","/Users/sophiastetsura/Desktop/mercury/weather__app/src/utils/api.js":"11","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCardUniversal.jsx":"12","/Users/sophiastetsura/Desktop/mercury/weather__app/src/utils/constans.js":"13"},{"size":218,"mtime":1621451308659,"results":"14","hashOfConfig":"15"},{"size":711,"mtime":1621785766953,"results":"16","hashOfConfig":"15"},{"size":3790,"mtime":1621771633117,"results":"17","hashOfConfig":"15"},{"size":941,"mtime":1621453153624,"results":"18","hashOfConfig":"15"},{"size":865,"mtime":1621453700730,"results":"19","hashOfConfig":"15"},{"size":1125,"mtime":1621768691241,"results":"20","hashOfConfig":"15"},{"size":347,"mtime":1621707974793,"results":"21","hashOfConfig":"15"},{"size":557,"mtime":1621709848660,"results":"22","hashOfConfig":"15"},{"size":4362,"mtime":1621774946228,"results":"23","hashOfConfig":"15"},{"size":1203,"mtime":1621723946829,"results":"24","hashOfConfig":"15"},{"size":714,"mtime":1621771116071,"results":"25","hashOfConfig":"15"},{"size":1252,"mtime":1621770862793,"results":"26","hashOfConfig":"15"},{"size":323,"mtime":1621771522519,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1vdb91d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/sophiastetsura/Desktop/mercury/weather__app/src/index.js",[],["60","61"],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/App.js",[],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherPast.jsx",["62","63","64","65","66"],"import React from 'react';\nimport WeatherCard from './weatherCard';\nimport WeatherCardPlug from './weatherCardPlug';\nimport Api from '../utils/api';\nimport {BASEURL_PAST, APIKEY, selectWeatherPast} from '../utils/constans';\n\n\nexport default function WeatherPast(){\n\n    const [dataForReq, setDataForReq] = React.useState({\n        lat: '',\n        lon: '',\n        dt: ''\n    });\n\n    const [cords, setCords] = React.useState([]);\n    const [minDate, setMinDate] = React.useState('');\n    const [maxDate, setMaxDate] = React.useState('');\n    const [weatherInfo, setWeatherInfo] = React.useState({\n        date: '',\n        weather: '',\n        icon: ''\n    })\n\n\n    const {date, weather, icon} = weatherInfo;\n\n    React.useEffect(() => {\n \n    }, [weatherInfo])\n\n    React.useEffect(() => {\n        handleMinDate();\n        handleMaxDate();\n    }, [minDate, maxDate])\n\n\n     React.useEffect(() => {\n        const {lat, lon, dt } = dataForReq;\n        if(lat && lon && dt ){\n            const api =  new Api (BASEURL_PAST, lat, lon, dt, APIKEY);\n            api.weatherForPast()\n            .then(data => setWeatherInfo({\n                        date: dt,\n                        weather: data.current.temp,\n                        icon: data.current.weather[0].icon\n                        }))\n                    .catch(err => console.log(err))\n        }\n    }, [dataForReq])\n\n    const handleChange = (e) => {\n        const {lat, lon, dt } = dataForReq;\n\n        if (e.target === document.querySelector('input[type=date]')) {\n            const dtVal = e.target.value;\n            const dtValUnix = new Date(dtVal).getTime() / 1000;\n            setDataForReq({...dataForReq, \n                            dt:dtValUnix})\n                            \n        } else if(e.target === document.querySelector(selectWeatherPast)){\n                const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n                const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n                setDataForReq({...dataForReq, \n                    lat:latVal,\n                    lon:lonVal})\n        }\n    }\n\n    function handleMinDate(){\n        let date = new Date();\n        const minDateUnix =  date.setDate(date.getDate()-5); //unix time\n        let minDateUtc = new Date(minDateUnix);\n        setMinDate(`${minDateUtc.getFullYear()}-0${minDateUtc.getMonth()+1}-${minDateUtc.getDate()}`);\n    }\n\n    function handleMaxDate() {\n        let date = new Date();\n        setMaxDate(`${date.getFullYear()}-0${date.getMonth()+1}-${date.getDate()}`);\n    }\n    return (\n        <>\n        <div className=\"weather__widget\">\n        <h2 className=\"weather__header\">Forecast for a Date in the Past</h2>\n        \n            <form name=\"weather__past\" action=\"\">\n            <div className=\"weather__inputs\">\n                <select id=\"city__past\"  className=\"weather__select\" name=\"city__past\" type=\"text\" onChange={handleChange}>\n                <option selected disabled>Select city</option>\n                    <option lat={'53.195873'} lon={'50.100193'}>Самара</option>\n                    <option lat={'53.507836'} lon={'49.420393'}>Тольятти</option>\n                    <option lat={'51.533557'} lon={'46.034257'}>Саратов</option>\n                    <option lat={'55.796127'} lon={'49.106405'}>Казань</option>\n                    <option lat={'45.035470'} lon={'38.975313'}>Краснодар</option>\n                </select>\n                <input className=\"weather__input\" type=\"date\" placeholder=\"Date\" min={minDate} max={maxDate} onChange={handleChange}/>\n                </div> </form>\n               { (date && weather && icon ? (<WeatherCard info = {weatherInfo}/>) : (<WeatherCardPlug/>))}\n        </div>\n        </>\n        \n    )\n}","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/custom-select-props.js",[],["67","68"],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/material-ui-pickers.js",[],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCard.jsx",["69"],"import React from 'react';\n\nexport default function WeatherCard({info}) {\n    const {date, weather, icon} = info;\n    let dateUtc = new Date(+date * 1000); \n    const month = dateUtc.getMonth()+1;\n    const months = {\n        1: 'jan',\n        2: 'feb',\n        3: 'mar',\n        4: 'apr',\n        5: 'may',\n        6: 'jun',\n        7: 'jul',\n        8: 'aug',\n        9: 'sep',\n        10: 'oct',\n        11: 'nov',\n        12: 'dec'\n    }\n    const transformMonth = months[month];\n    console.log(weather);\n    let weatherCels = `${Math.round(+weather - 273.15)}`;\n    \n    return (\n        <>\n        <div className=\"weather__card\">\n            <div className=\"weather__date\">{`${dateUtc.getDate()} ${transformMonth} ${dateUtc.getFullYear()}`}</div>\n            <div className=\"weather__icon\">\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`}></img>\n            </div>\n            {/* <div className=\"weather__icon\">{(new Date(dateUtc/1000))}</div> */}\n            <div className=\"weather__temp\">{`${weatherCels > 0 ? \"+\" + weatherCels : weatherCels}`}</div>\n        </div>\n        </>\n    )\n}","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/Main.jsx",[],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCardPlug.jsx",["70"],"import React from 'react';\nimport defaultWeatherIcon from '../img/Placeholder/Academy-Weather-bg160.svg'\n\nexport default function WeatherCardPlug() {\n    return (<>\n      <div className=\"weather__card weather__card_default\">\n            <div className=\"weather__icon\">\n                <img src={defaultWeatherIcon}></img>\n            </div>\n            {/* <div className=\"weather__icon\">{(new Date(dateUtc/1000))}</div> */}\n            <div className=\"weather__title\">Fill in all the fields and the weather will be displayed</div>\n        </div>\n    </>)\n}","/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherNextWeek.jsx",["71","72","73","74","75","76","77","78"],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCardWeek.jsx",["79"],"import React from 'react';\n\nexport default function WeatherCardWeek({info, style}) {\n    const {dt, temp, weather} = info;\n    const {max } = temp;\n    const {icon } = weather[0];\n    let dateUtc = new Date(+dt * 1000); \n    // console.log(weather);\n    let weatherCels = Math.round(+max - 273.15);\n\n    const month = dateUtc.getMonth()+1;\n    const months = {\n        1: 'jan',\n        2: 'feb',\n        3: 'mar',\n        4: 'apr',\n        5: 'may',\n        6: 'jun',\n        7: 'jul',\n        8: 'aug',\n        9: 'sep',\n        10: 'oct',\n        11: 'nov',\n        12: 'dec'\n    }\n    const transformMonth = months[month];\n    console.log(info);\n    return (\n        <>\n           <div className={`weather__card ${style ? \"weather__card_\"+style : ''}`}>\n            <div className=\"weather__date\">{`${dateUtc.getDate()} ${transformMonth} ${dateUtc.getFullYear()}`}</div>\n            <div className={`weather__icon ${style ? \"weather__icon_\"+style : ''}`}>\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`}></img>\n            </div>\n            <div className=\"weather__temp\">{`${weatherCels > 0 ? \"+\" + weatherCels : weatherCels}`}</div>\n        </div>\n        </>\n    )\n}","/Users/sophiastetsura/Desktop/mercury/weather__app/src/utils/api.js",[],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/comp/weatherCardUniversal.jsx",[],"/Users/sophiastetsura/Desktop/mercury/weather__app/src/utils/constans.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":16,"column":12,"nodeType":"86","messageId":"87","endLine":16,"endColumn":17},{"ruleId":"84","severity":1,"message":"88","line":16,"column":19,"nodeType":"86","messageId":"87","endLine":16,"endColumn":27},{"ruleId":"84","severity":1,"message":"89","line":53,"column":16,"nodeType":"86","messageId":"87","endLine":53,"endColumn":19},{"ruleId":"84","severity":1,"message":"90","line":53,"column":21,"nodeType":"86","messageId":"87","endLine":53,"endColumn":24},{"ruleId":"84","severity":1,"message":"91","line":53,"column":26,"nodeType":"86","messageId":"87","endLine":53,"endColumn":28},{"ruleId":"80","replacedBy":"92"},{"ruleId":"82","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":30,"column":17,"nodeType":"96","endLine":30,"endColumn":78},{"ruleId":"94","severity":1,"message":"95","line":8,"column":17,"nodeType":"96","endLine":8,"endColumn":47},{"ruleId":"84","severity":1,"message":"97","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":19},{"ruleId":"84","severity":1,"message":"98","line":12,"column":12,"nodeType":"86","messageId":"87","endLine":12,"endColumn":16},{"ruleId":"84","severity":1,"message":"99","line":13,"column":12,"nodeType":"86","messageId":"87","endLine":13,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":41,"column":8,"nodeType":"102","endLine":41,"endColumn":21,"suggestions":"103"},{"ruleId":"84","severity":1,"message":"89","line":44,"column":16,"nodeType":"86","messageId":"87","endLine":44,"endColumn":19},{"ruleId":"84","severity":1,"message":"90","line":44,"column":21,"nodeType":"86","messageId":"87","endLine":44,"endColumn":24},{"ruleId":"84","severity":1,"message":"91","line":44,"column":26,"nodeType":"86","messageId":"87","endLine":44,"endColumn":28},{"ruleId":"104","severity":1,"message":"105","line":116,"column":67,"nodeType":"106","messageId":"107","endLine":116,"endColumn":83},{"ruleId":"94","severity":1,"message":"95","line":33,"column":17,"nodeType":"96","endLine":33,"endColumn":78},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'cords' is assigned a value but never used.","Identifier","unusedVar","'setCords' is assigned a value but never used.","'lat' is assigned a value but never used.","'lon' is assigned a value but never used.","'dt' is assigned a value but never used.",["108"],["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'WeatherCard' is defined but never used.","'prev' is assigned a value but never used.","'next' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setEventListeners'. Either include it or remove the dependency array.","ArrayExpression",["110"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [setEventListeners, weatherWeek]",{"range":"113","text":"114"},[1220,1233],"[setEventListeners, weatherWeek]"]