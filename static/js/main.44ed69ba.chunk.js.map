{"version":3,"sources":["components/weatherCards/weatherCard.tsx","img/Placeholder/Academy-Weather-bg160.svg","components/weatherCards/weatherCardPlug.tsx","utils/api.js","utils/constans.js","components/weatherWidgets/weatherPast/weatherPast.tsx","components/weatherCards/weatherCardWeek.tsx","components/weatherWidgets/weatherOnNextWeek/weatherNextWeek.tsx","components/main/Main.tsx","App.js","index.js"],"names":["WeatherCard","info","date","weather","icon","dateUtc","Date","transformMonth","1","2","3","4","5","6","7","8","9","10","11","12","getMonth","weatherCels","Math","round","className","getDate","getFullYear","src","WeatherCardPlug","defaultWeatherIcon","Api","url","lat","lon","dt","key","this","Apikey","res","ok","json","Promise","reject","status","fetch","then","handleOriginalResponse","APIKEY","WeatherPast","React","useState","dataForReq","setDataForReq","minDate","setMinDate","maxDate","setMaxDate","weatherInfo","setWeatherInfo","useEffect","minDateUnix","setDate","minDateUtc","handleMinDate","handleMaxDate","weatherForPast","data","current","temp","catch","err","console","log","handleChange","e","target","document","querySelector","dtVal","value","dtValUnix","getTime","latVal","selectedIndex","attributes","lonVal","id","name","type","onChange","selected","disabled","placeholder","min","max","WeatherCardWeek","style","WeatherNextWeek","slider","useRef","setPrev","setNext","position","weatherWeek","setWeatherWeek","handlerPrev","childNodes","forEach","elem","handlerNext","handleArrowBtn","weatherOnWeek","daily","addEventListener","currentDate","currentDateUnix","length","ref","map","card","onClick","Main","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.44ed69ba.chunk.js","sourcesContent":["import React from 'react';\n\ninterface CardProps {\n    info:{date:string; weather:string; icon:string};\n}\n\nconst WeatherCard: React.FC<CardProps> = ({info}) => {\n    const {date, weather, icon} = info;\n    let dateUtc:any = new Date(+date * 1000);\n    const month:string = `${dateUtc.getMonth()+1}`;\n    const months:any = {\n        1: 'jan',\n        2: 'feb',\n        3: 'mar',\n        4: 'apr',\n        5: 'may',\n        6: 'jun',\n        7: 'jul',\n        8: 'aug',\n        9: 'sep',\n        10: 'oct',\n        11: 'nov',\n        12: 'dec'\n    }\n    const transformMonth:string = months[month];\n    let weatherCels:number = +`${Math.round(+weather - 273.15)}`;\n    \n    return (\n        <>\n        <div className=\"weather__card\">\n            <div className=\"weather__date\">{`${dateUtc.getDate()} ${transformMonth} ${dateUtc.getFullYear()}`}</div>\n            <div className=\"weather__icon\">\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`}></img>\n            </div>\n            {/* <div className=\"weather__icon\">{(new Date(dateUtc/1000))}</div> */}\n            <div className=\"weather__temp\">{`${weatherCels > 0 ? \"+\" + weatherCels : weatherCels}`}</div>\n        </div>\n        </>\n    )\n}\n\nexport default WeatherCard;","export default __webpack_public_path__ + \"static/media/Academy-Weather-bg160.1a743710.svg\";","import React from 'react';\n// @ts-ignore\nimport defaultWeatherIcon from '../../img/Placeholder/Academy-Weather-bg160.svg';\n\nconst WeatherCardPlug: React.FC = () => {\n    return (<>\n      <div className=\"weather__card weather__card_default\">\n            <div className=\"weather__icon\">\n                <img src={defaultWeatherIcon}></img>\n            </div>\n            {/* <div className=\"weather__icon\">{(new Date(dateUtc/1000))}</div> */}\n            <div className=\"weather__title\">Fill in all the fields and the weather will be displayed</div>\n        </div>\n    </>)\n}\n\nexport default WeatherCardPlug;","export default class Api {\n\n    constructor(url, lat, lon, dt, key){\n        this.url = url;\n        this.lat = lat;\n        this.lon = lon;\n        this.dt = dt;\n        this.Apikey = key;\n    }\n\n    handleOriginalResponse(res) {\n        if (!res.ok) {\n            return Promise.reject(`Error: ${res.status}`);\n        }\n        return res.json();\n    }\n\n     weatherOnWeek() {\n        return fetch(`${this.url}lat=${this.lat}&lon=${this.lon}&dt=${this.dt}&appid=${this.Apikey}`)\n        .then(this.handleOriginalResponse);\n    }\n\n\n     weatherForPast() {\n        return fetch(`${this.url}lat=${this.lat}&lon=${this.lon}&dt=${this.dt}&appid=${this.Apikey}`)\n        .then(this.handleOriginalResponse);\n    }\n}\n\n\n","export const BASEURL_PAST = 'https://api.openweathermap.org/data/2.5/onecall/timemachine?';\nexport const BASEURL_WEEK = 'https:api.openweathermap.org/data/2.5/onecall?';\nexport const APIKEY = '7502839bf5a559b85bd11512693a5993';\nexport const selectWeatherWeek = '#city__week';\nexport const selectWeatherPast = '#city__past';","import React from 'react';\nimport WeatherCard from '../../weatherCards/weatherCard';\nimport WeatherCardPlug from '../../weatherCards/weatherCardPlug';\nimport Api from '../../../utils/api';\nimport {BASEURL_PAST, APIKEY, selectWeatherPast} from '../../../utils/constans';\nimport {IdataForReq, IWeatherInfoPast} from \"../../../types/types\";\n\n\nconst WeatherPast:React.FC = () =>{\n\n    const [dataForReq, setDataForReq] = React.useState<IdataForReq>({\n        lat: '',\n        lon: '',\n        dt: ''\n    });\n\n    const [minDate, setMinDate] = React.useState<string>('');\n    const [maxDate, setMaxDate] = React.useState<string>('');\n    const [weatherInfo, setWeatherInfo] = React.useState<IWeatherInfoPast>({\n        date: '',\n        weather: '',\n        icon: ''\n    })\n\n\n    const {date, weather, icon} = weatherInfo;\n\n    React.useEffect(() => {\n \n    }, [weatherInfo])\n\n    React.useEffect(() => {\n        handleMinDate();\n        handleMaxDate();\n    }, [minDate, maxDate])\n\n\n     React.useEffect(() => {\n        const {lat, lon, dt } = dataForReq;\n        if(lat && lon && dt ){\n            const api =  new Api (BASEURL_PAST, lat, lon, dt, APIKEY);\n            api.weatherForPast()\n            .then(data => setWeatherInfo({\n                        date: dt,\n                        weather: data.current.temp,\n                        icon: data.current.weather[0].icon\n                        }))\n                    .catch(err => console.log(err))\n        }\n    }, [dataForReq])\n\n    const handleChange = (e:any) => {\n        const {lat, lon, dt } = dataForReq;\n\n        if (e.target === document.querySelector('input[type=date]')) {\n            const dtVal = e.target.value;\n            const dtValUnix = new Date(dtVal).getTime() / 1000;\n            setDataForReq({...dataForReq, \n                            dt: \"\"+dtValUnix})\n                            \n        } else if(e.target === document.querySelector(selectWeatherPast)){\n                const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n                const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n                setDataForReq({...dataForReq, \n                    lat:latVal,\n                    lon:lonVal})\n        }\n    }\n\n    function handleMinDate(){\n        let date = new Date();\n        const minDateUnix =  date.setDate(date.getDate()-5); //unix time\n        let minDateUtc = new Date(minDateUnix);\n        setMinDate(`${minDateUtc.getFullYear()}-0${minDateUtc.getMonth()+1}-${minDateUtc.getDate()}`);\n    }\n\n    function handleMaxDate() {\n        let date = new Date();\n        setMaxDate(`${date.getFullYear()}-0${date.getMonth()+1}-${date.getDate()}`);\n    }\n\n    return (\n        <>\n        <div className=\"weather__widget\">\n        <h2 className=\"weather__header\">Forecast for a Date in the Past</h2>\n            <div className=\"weather__inputs\">{/*@ts-ignore*/}\n                <select id=\"city__past\"  className=\"weather__select\" name=\"city__past\" type=\"text\" onChange={handleChange}>\n                <option selected disabled>Select city</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'53.195873'} lon={'50.100193'}>Самара</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'53.507836'} lon={'49.420393'}>Тольятти</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'51.533557'} lon={'46.034257'}>Саратов</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'55.796127'} lon={'49.106405'}>Казань</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'45.035470'} lon={'38.975313'}>Краснодар</option>\n                </select>\n                <input className=\"weather__input\" type=\"date\" placeholder=\"Date\" min={minDate} max={maxDate} onChange={handleChange}/>\n                </div>\n               { (date && weather && icon ? (<WeatherCard info = {weatherInfo}/>) : (<WeatherCardPlug/>))}\n        </div>\n        </>\n        \n    )\n}\n\nexport default WeatherPast;","import React from 'react';\nimport {IWeatherUpData} from \"../../types/types\";\n\ninterface CardProps {\n    info:{dt:any; temp:{max:string}; weather:object[]};\n    style:string\n}\n\nconst WeatherCardWeek : React.FC<CardProps> = ({info, style}) => {\n    const {dt, temp, weather} = info;\n    const { max } = temp;\n    const { icon }:any = weather[0];\n    let dateUtc:any = new Date(+dt * 1000);\n    let weatherCels:number = Math.round(+max - 273.15);\n\n    const month:string = `${dateUtc.getMonth()+1}`;\n    const months:any = {\n        1: 'jan',\n        2: 'feb',\n        3: 'mar',\n        4: 'apr',\n        5: 'may',\n        6: 'jun',\n        7: 'jul',\n        8: 'aug',\n        9: 'sep',\n        10: 'oct',\n        11: 'nov',\n        12: 'dec'\n    }\n    const transformMonth:any = months[month];\n    return (\n        <>\n           <div className={`weather__card ${style ? \"weather__card_\"+style : ''}`}>\n            <div className=\"weather__date\">{`${dateUtc.getDate()} ${transformMonth} ${dateUtc.getFullYear()}`}</div>\n            <div className={`weather__icon ${style ? \"weather__icon_\"+style : ''}`}>\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`}></img>\n            </div>\n            <div className=\"weather__temp\">{`${weatherCels > 0 ? \"+\" + weatherCels : weatherCels}`}</div>\n        </div>\n        </>\n    )\n}\n\nexport default WeatherCardWeek;","import React from 'react';\nimport WeatherCardPlug from '../../weatherCards/weatherCardPlug';\nimport WeatherCardWeek from '../../weatherCards/weatherCardWeek';\nimport Api from '../../../utils/api';\nimport {BASEURL_WEEK, APIKEY, selectWeatherWeek} from '../../../utils/constans';\nimport {IdataForReq, ISliderFlag, IWeatherInfo, IWeatherUpData} from \"../../../types/types\";\n\nconst WeatherNextWeek : React.FC =() => {\n\n    //slider state and utils\n    const slider = React.useRef<HTMLDivElement>(null)\n    const [prev, setPrev] = React.useState<boolean>(false);\n    const [next, setNext] = React.useState<boolean>(false);\n    let position = 0;\n    //state for request to weather API\n    const [dataForReq, setDataForReq] = React.useState<IdataForReq>({\n        lat: '',\n        lon: '',\n        dt: ''\n    });\n\n    //state with array of weather on the week\n    const [weatherWeek, setWeatherWeek] = React.useState<IWeatherUpData[]>([])\n\n    React.useEffect(() => {\n        const {lat, lon, dt } = dataForReq;\n        if(lat && lon && dt ){\n            const api = new Api(BASEURL_WEEK, lat, lon, dt, APIKEY);\n            api.weatherOnWeek()\n                .then(data => setWeatherWeek(data.daily))\n                .catch(err => console.log(err))\n        }\n    }, [dataForReq])\n\n    React.useEffect(() => {\n        setEventListeners();\n    }, [weatherWeek])\n\n    function handleChange(e:any){\n        const {lat, lon, dt } = dataForReq;\n\n    if(e.target === document.querySelector(selectWeatherWeek)){\n                const latVal = e.target[e.target.selectedIndex].attributes.lat.value;\n                const lonVal = e.target[e.target.selectedIndex].attributes.lon.value;\n                const currentDate =  new Date();\n                const currentDateUnix =  ''+currentDate.setDate(currentDate.getDate());\n                setDataForReq({...dataForReq, \n                    lat:latVal,\n                    lon:lonVal,\n                    dt:currentDateUnix\n                })\n        }\n    }\n    function handlerPrev () {\n        if(position === 0) {\n            setPrev(true);\n        } else {\n            position += 184;\n            setPrev(false);\n            // @ts-ignore\n            slider.current.childNodes.forEach((elem:any)=> {\n                elem.style = `transform: translateX(${position}px)`;\n            })\n        }\n    }\n\n    function handlerNext () {\n        if(position === -1288) {\n            setNext(true);\n            setPrev(false);\n        } else {\n            setPrev(false);\n            position -= 184;\n            // @ts-ignore\n            slider.current.childNodes.forEach((elem)=> {\n                // @ts-ignore\n                elem.style = `transform: translateX(${position}px)`;\n            })\n        }\n    }\n\n    function setEventListeners() {\n        document.addEventListener('keydown', handleArrowBtn);\n\n    }\n    function handleArrowBtn(e:any){\n        if(e.key === 'ArrowLeft') {\n            handlerPrev();\n        } else if(e.key === 'ArrowRight') {\n            handlerNext();\n        }\n    }\n\n\n    // @ts-ignore\n    // @ts-ignore\n    return (\n        <>\n        <div className=\"weather__widget\">\n        <h2 className=\"weather__header\">7 Days Forecast</h2>\n        <div className=\"weather__inputs\">\n            {/*@ts-ignore*/}\n                <select id=\"city__week\" className=\"weather__select\" type=\"text\" onChange={handleChange}>\n                <option selected disabled>Select city</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'53.195873'} lon={'50.100193'}>Самара</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'53.507836'} lon={'49.420393'}>Тольятти</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'51.533557'} lon={'46.034257'}>Саратов</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'55.796127'} lon={'49.106405'}>Казань</option>\n                    {/*@ts-ignore*/}\n                    <option lat={'45.035470'} lon={'38.975313'}>Краснодар</option>\n                </select>\n                </div>\n                {!weatherWeek.length && (<WeatherCardPlug />)}\n                {weatherWeek.length > 0 && (\n                <div className=\"slider\">\n                    <div className=\"slider__track\"  ref={slider}>\n                      {weatherWeek.map((card) => (\n                          //@ts-ignore\n                     <WeatherCardWeek key={card.dt} info = {card} style = 'slider' />))}\n                    </div>\n                   <button className=\"slider__button slider__button_prev\"onClick={handlerPrev}></button>\n                   <button className=\"slider__button slider__button_next\"onClick={handlerNext}></button>\n                   </div>)\n                   }\n        </div>\n        </>\n    )\n}\n\nexport default WeatherNextWeek;","import React from 'react';\nimport WeatherPast from '../weatherWidgets/weatherPast/weatherPast';\nimport WeatherNextWeek from '../weatherWidgets/weatherOnNextWeek/weatherNextWeek';\n\nconst Main: React.FC = () => {\n    return (\n        <>\n        <div className=\"weathers__container\">\n          <WeatherNextWeek></WeatherNextWeek>\n          <WeatherPast></WeatherPast>\n        </div>\n       \n        </>\n    )\n}\n\nexport default Main;","import './App.css';\nimport Main from './components/main/Main';\n\nfunction App() {\n    return (\n        <div className='page'>\n            <div className='page__container'>\n                <div className=\"header__wrapper\">\n                    <h1 className='header'>Weather <br/><span className=\"header__text\">Forecast</span></h1>\n                </div>\n                <Main/>\n              <div className=\"page__background_desktop page__background_desktop-top\"></div>\n              <div className=\"page__background_desktop page__background_desktop-bottom\"></div>\n            </div>\n\n            <footer><p className=\"footer__text\">С любовью от MERCURY DEVELOPMENT</p></footer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}